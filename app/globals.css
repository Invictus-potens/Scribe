@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Variables for responsive design */
:root {
  --app-scale: 0.8;
  --app-scale-compensation: calc(100% / var(--app-scale));
  --header-height: 4rem;
  --sidebar-width: 16rem;
  --content-padding: 1rem;
  --border-radius: 0.5rem;
  --transition-duration: 0.2s;
}

/* Base styles */
html {
  scroll-behavior: smooth;
  transform: scale(var(--app-scale));
  transform-origin: top left;
  width: var(--app-scale-compensation);
  height: var(--app-scale-compensation);
  overflow: hidden;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f8fafc;
  color: #1e293b;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  body {
    background-color: #0f172a;
    color: #f1f5f9;
  }
}

/* Utility classes */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--content-padding);
}

.card {
  background: white;
  border-radius: var(--border-radius);
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  transition: box-shadow var(--transition-duration) ease-in-out;
}

.card:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.dark .card {
  background: #1e293b;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3), 0 1px 2px 0 rgba(0, 0, 0, 0.2);
}

.dark .card:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
}

/* Responsive text sizes */
.text-responsive-xs { font-size: clamp(0.75rem, 2vw, 0.875rem); }
.text-responsive-sm { font-size: clamp(0.875rem, 2.5vw, 1rem); }
.text-responsive-base { font-size: clamp(1rem, 3vw, 1.125rem); }
.text-responsive-lg { font-size: clamp(1.125rem, 3.5vw, 1.25rem); }
.text-responsive-xl { font-size: clamp(1.25rem, 4vw, 1.5rem); }
.text-responsive-2xl { font-size: clamp(1.5rem, 5vw, 2rem); }

/* Responsive spacing */
.space-responsive-xs { gap: clamp(0.25rem, 1vw, 0.5rem); }
.space-responsive-sm { gap: clamp(0.5rem, 1.5vw, 0.75rem); }
.space-responsive-md { gap: clamp(0.75rem, 2vw, 1rem); }
.space-responsive-lg { gap: clamp(1rem, 2.5vw, 1.5rem); }
.space-responsive-xl { gap: clamp(1.5rem, 3vw, 2rem); }

/* Responsive padding */
.p-responsive-xs { padding: clamp(0.25rem, 1vw, 0.5rem); }
.p-responsive-sm { padding: clamp(0.5rem, 1.5vw, 0.75rem); }
.p-responsive-md { padding: clamp(0.75rem, 2vw, 1rem); }
.p-responsive-lg { padding: clamp(1rem, 2.5vw, 1.5rem); }
.p-responsive-xl { padding: clamp(1.5rem, 3vw, 2rem); }

/* Responsive margins */
.m-responsive-xs { margin: clamp(0.25rem, 1vw, 0.5rem); }
.m-responsive-sm { margin: clamp(0.5rem, 1.5vw, 0.75rem); }
.m-responsive-md { margin: clamp(0.75rem, 2vw, 1rem); }
.m-responsive-lg { margin: clamp(1rem, 2.5vw, 1.5rem); }
.m-responsive-xl { margin: clamp(1.5rem, 3vw, 2rem); }

/* Responsive widths */
.w-responsive-sm { width: clamp(200px, 20vw, 300px); }
.w-responsive-md { width: clamp(300px, 30vw, 400px); }
.w-responsive-lg { width: clamp(400px, 40vw, 500px); }
.w-responsive-xl { width: clamp(500px, 50vw, 600px); }

/* Responsive heights */
.h-responsive-sm { height: clamp(200px, 20vh, 300px); }
.h-responsive-md { height: clamp(300px, 30vh, 400px); }
.h-responsive-lg { height: clamp(400px, 40vh, 500px); }
.h-responsive-xl { height: clamp(500px, 50vh, 600px); }

/* Layout utilities */
.layout-header {
  height: var(--header-height);
  padding: 0 var(--content-padding);
}

.layout-sidebar {
  width: var(--sidebar-width);
  padding: var(--content-padding);
}

.layout-content {
  padding: var(--content-padding);
  padding-bottom: var(--content-padding);
}

/* App scale utilities */
.scale-app-75 { --app-scale: 0.75; }
.scale-app-80 { --app-scale: 0.8; }
.scale-app-85 { --app-scale: 0.85; }
.scale-app-90 { --app-scale: 0.9; }
.scale-app-95 { --app-scale: 0.95; }
.scale-app-100 { --app-scale: 1; }

/* TipTap Editor Styles */
.ProseMirror {
  outline: none;
  min-height: 400px;
  height: 100%;
  overflow-y: auto;
}

.ProseMirror p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror h1 {
  font-size: 2em;
  font-weight: bold;
  margin: 0.67em 0;
}

.ProseMirror h2 {
  font-size: 1.5em;
  font-weight: bold;
  margin: 0.75em 0;
}

.ProseMirror h3 {
  font-size: 1.17em;
  font-weight: bold;
  margin: 0.83em 0;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5em;
  margin: 1em 0;
}

.ProseMirror li {
  margin: 0.5em 0;
}

.ProseMirror blockquote {
  border-left: 3px solid #ddd;
  margin: 1em 0;
  padding-left: 1em;
  font-style: italic;
}

.ProseMirror code {
  background-color: #f1f1f1;
  padding: 0.2em 0.4em;
  border-radius: 3px;
  font-family: 'Courier New', monospace;
  font-size: 0.9em;
}

.ProseMirror pre {
  background-color: #f1f1f1;
  padding: 1em;
  border-radius: 5px;
  overflow-x: auto;
  margin: 1em 0;
}

.ProseMirror pre code {
  background-color: transparent;
  padding: 0;
}

.ProseMirror hr {
  border: none;
  border-top: 1px solid #ddd;
  margin: 2em 0;
}

/* TaskList and TaskItem styles */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  align-items: flex-start;
  margin: 0.5em 0;
}

.ProseMirror ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0.5em;
  user-select: none;
}

.ProseMirror ul[data-type="taskList"] li > div {
  flex: 1 1 auto;
}

.ProseMirror ul[data-type="taskList"] li ul li,
.ProseMirror ul[data-type="taskList"] li ol li {
  list-style: none;
}

.ProseMirror ul[data-type="taskList"] li ul,
.ProseMirror ul[data-type="taskList"] li ol {
  margin: 0.5em 0;
  padding-left: 1.5em;
}

/* Checkbox styles */
.ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  margin: 0;
  cursor: pointer;
  width: 16px;
  height: 16px;
  accent-color: #3b82f6;
}

/* Dark mode styles */
.dark .ProseMirror {
  color: #e5e7eb;
}

.dark .ProseMirror blockquote {
  border-left-color: #4b5563;
}

.dark .ProseMirror code {
  background-color: #374151;
  color: #e5e7eb;
}

.dark .ProseMirror pre {
  background-color: #374151;
}

.dark .ProseMirror hr {
  border-top-color: #4b5563;
}

/* Dark mode tasklist styles */
.dark .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  accent-color: #60a5fa;
}

/* Focus styles */
.ProseMirror:focus {
  outline: none;
}

/* Selection styles */
.ProseMirror ::selection {
  background-color: #3b82f6;
  color: white;
}

.dark .ProseMirror ::selection {
  background-color: #60a5fa;
  color: white;
}

/* Draggable images */
.draggable-image {
  cursor: move;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  display: inline-block;
  max-width: 100%;
  height: auto;
}

.draggable-image:hover {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.draggable-image:active {
  cursor: grabbing;
}

/* Drag handle styles */
.drag-handle {
  position: absolute;
  top: -8px;
  left: -8px;
  width: 16px;
  height: 16px;
  background-color: #3b82f6;
  border-radius: 50%;
  cursor: move;
  opacity: 0;
  transition: opacity 0.2s;
  z-index: 10;
}

.draggable-image:hover .drag-handle {
  opacity: 1;
}

.dark .drag-handle {
  background-color: #60a5fa;
}

/* Estilos para melhorar o feedback visual do drag and drop */

/* Animação para nota sendo movida */
@keyframes noteMove {
  0% {
    transform: scale(1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
}

/* Classe aplicada quando uma nota é movida com sucesso */
.moving {
  animation: noteMove 0.4s ease-in-out;
  transform-origin: center;
}

/* Estilos específicos para notas sendo arrastadas */
.draggable-note[data-dragging="true"] {
  transform: rotate(2deg) scale(1.08) !important;
  box-shadow: 0 15px 35px rgba(59, 130, 246, 0.4) !important;
  z-index: 1000 !important;
  border: 2px solid #3b82f6 !important;
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(147, 197, 253, 0.1)) !important;
  transition: none !important;
}

/* Melhorar o handle de drag */
.drag-handle {
  transition: all 0.2s ease;
  opacity: 0.6;
}

.draggable-note:hover .drag-handle {
  opacity: 1;
  background-color: #3b82f6;
  transform: scale(1.2);
}

/* Feedback visual para áreas de drop */
.drop-zone-active {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(147, 197, 253, 0.05));
  border: 2px dashed #3b82f6;
  transform: scale(1.02);
  transition: all 0.2s ease;
}

/* Animação suave para reordenação */
.draggable-note {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

/* Dark mode adjustments */
.dark .draggable-note[data-dragging="true"] {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(147, 197, 253, 0.1)) !important;
  border-color: #60a5fa !important;
  box-shadow: 0 15px 35px rgba(59, 130, 246, 0.6) !important;
}

.dark .drop-zone-active {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(147, 197, 253, 0.1));
  border-color: #60a5fa;
}

/* Indicador visual para pasta que pode receber drop */
.folder-drop-hover {
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(134, 239, 172, 0.05)) !important;
  border: 2px solid #22c55e !important;
  transform: scale(1.03);
  box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);
}

.dark .folder-drop-hover {
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.2), rgba(134, 239, 172, 0.1)) !important;
  border-color: #4ade80 !important;
  box-shadow: 0 4px 12px rgba(34, 197, 94, 0.4);
}

/* Animação de sucesso quando nota é solta */
@keyframes dropSuccess {
  0% {
    transform: scale(1);
    background-color: transparent;
  }
  50% {
    transform: scale(1.05);
    background-color: rgba(34, 197, 94, 0.2);
  }
  100% {
    transform: scale(1);
    background-color: transparent;
  }
}

.drop-success {
  animation: dropSuccess 0.6s ease-in-out;
}

/* Melhorar a aparência do overlay de drag */
.drag-overlay {
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(8px);
  border: 2px solid #3b82f6;
  box-shadow: 0 20px 40px rgba(59, 130, 246, 0.4);
  transform: rotate(3deg);
}

.dark .drag-overlay {
  background: rgba(31, 41, 55, 0.95);
  border-color: #60a5fa;
  box-shadow: 0 20px 40px rgba(59, 130, 246, 0.6);
}

/* Indicador de posição durante reordenação */
.sort-indicator {
  height: 2px;
  background: #3b82f6;
  border-radius: 1px;
  margin: 4px 0;
  opacity: 0;
  transform: scaleX(0);
  transition: all 0.2s ease;
}

.sort-indicator.active {
  opacity: 1;
  transform: scaleX(1);
}

/* Estados de hover melhorados */
.draggable-note:not([data-dragging="true"]):hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.dark .draggable-note:not([data-dragging="true"]):hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

/* Transições suaves para todos os elementos dragáveis */
.draggable-note,
.folder-item,
.all-notes-item {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, box-shadow;
}

/* Otimização de performance para drag */
.draggable-note[data-dragging="true"] * {
  pointer-events: none;
}

/* Feedback tátil para mobile */
@media (hover: none) and (pointer: coarse) {
  .draggable-note:active {
    transform: scale(0.98);
  }
  
  .drag-handle {
    opacity: 1;
    transform: scale(1.1);
  }
}

/* Advanced Text Formatting Styles */
.ProseMirror .is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

/* Text Color and Background */
.ProseMirror [style*="color"] {
  color: inherit;
}

.ProseMirror [style*="background-color"] {
  background-color: inherit;
}

/* Font Family */
.ProseMirror [style*="font-family"] {
  font-family: inherit;
}

/* Subscript and Superscript */
.ProseMirror sub {
  vertical-align: sub;
  font-size: smaller;
}

.ProseMirror sup {
  vertical-align: super;
  font-size: smaller;
}

/* Highlight */
.ProseMirror mark {
  background-color: #fef08a;
  padding: 0.1em 0.2em;
  border-radius: 0.2em;
}



/* Dark mode highlight */
.dark .ProseMirror mark {
  background-color: #fbbf24;
  color: #1f2937;
}